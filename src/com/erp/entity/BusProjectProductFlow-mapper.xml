<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="busprojectproductflow">
    <sql id="selectId">
        flowId,
        productNo,
        productName,
        status,
        bak
    </sql>

    <select id="query" resultType="BusProjectProductFlow" parameterType="java.util.HashMap">

        select
        <include refid="selectId" />
        from BusProjectProductFlow  where flowId = #{flowId}
    </select>

    <!-- total count -->
    <select id="count" parameterType="BusProjectProductFlow" resultType="int">
        select count(0) from BusProjectProductFlow
    </select>

     <select id="getByFlowId" parameterType="String" resultType="BusProjectProductFlow">
        select * from BusProjectProductFlow where flowId=${flowid}
    </select>
    
    <select id="getByProductNo" parameterType="BusProjectProductFlowVo" resultType="BusProjectProductFlow">
         select productNo,productName,`status`  from (
			select productNo,productName,`status` from  busprojectproduct where projectId = (select projectId from busprojectproductprojectflow where  flowid= #{flowId})
			UNION ALL 
			select productNo,productName,`status` from busprojectproductflow where  flowid= #{flowId}) as t where productNo = #{productNo}
    </select>
    <select id="conditionSelect" parameterType="BusProjectProductFlowVo" resultType="int">
        select sum(a.countt) from (
        select count(*)  as countt from BusProjectProductFlow where productNo = #{productNo} and productName= #{productName} and status= #{status} and flowId = #{flowId}
        UNION ALL
        select count(*) as countt from  busprojectproduct where productNo = #{productNo} and productName= #{productName} and status= #{status} and projectId
        in (select projectId from busprojectproductprojectflow where flowId=#{flowId}))
        as a
    </select>
    <insert id="add" parameterType="BusProjectProductFlow">
        insert into BusProjectProductFlow(
        flowId,
        productNo,
        productName,
        status,
        bak )
        values (
        #{flowId},
        #{productNo},
        #{productName},
        #{status},
        #{bak})
    </insert>
    <update id="update" parameterType="BusProjectProductFlowVo">
        UPDATE BusProjectProductFlow
        <set>
          productNo = #{productNo},
          productName = #{productName},
          status= #{status},
          bak= #{bak}
        </set>
         <where>
            status=#{statusOld} and productNo=#{productNoOld} and productName=#{productNameOld} and flowId=#{flowId}
         </where>
    </update>
    <delete id="deleteByObj" parameterType="BusProjectProductFlow">
        delete from BusProjectProductFlow where productNo=#{productNo} and productName=#{productName} and status=#{status} and flowId=#{flowId}
    </delete>
    <delete id="deleteById"  parameterType="String">
      delete from  BusProjectProductFlow where flowId = #{id};
    </delete>
</mapper>
